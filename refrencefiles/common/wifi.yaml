################################################################################
# WiFi
################################################################################

# Globals
globals: ##to set default reboot behavior
  - id: ${device_internal_name}_wifi_connection
    type: bool
    restore_value: no
    initial_value: "false"

# WiFi Settings
wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
  manual_ip:
    static_ip: ${device_ip_address}
    gateway: !secret gateway_address
    subnet: !secret subnet_address
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_wifi_name}
    password: !secret web_server_password
  domain: .local
  fast_connect: true
  power_save_mode: none

# Sensors
sensor:
  # WiFi
  - platform: wifi_signal
    id: ${device_internal_name}_wifi_signal
    name: WiFi Signal dB
    update_interval: ${device_sampling_time}
    entity_category: diagnostic
    disabled_by_default: true

  - platform: wifi_signal
    id: ${device_internal_name}_wifi_signal_percentage
    name: WiFi Signal Percentage
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    update_interval: ${device_sampling_time}
    entity_category: diagnostic
    disabled_by_default: true

# Text Sensors
text_sensor:
  # WiFi internal sensors
  - platform: wifi_info
    ip_address:
      id: ${device_internal_name}_ip_address
      name: IP Address
      icon: mdi:wifi
    ssid:
      id: ${device_internal_name}_connected_ssid
      name: Connected SSID
      icon: mdi:wifi
    mac_address:
      id: ${device_internal_name}_mac_address
      name: Mac Wifi Address
      icon: mdi:wifi
    dns_address:
      id: ${device_internal_name}_dns_address
      name: DNS Address
      icon: mdi:network
      disabled_by_default: true

  # WiFi Strength human readable
  - platform: template
    id: ${device_internal_name}_wifi_strength
    name: Wifi Signal Strength
    icon: mdi:wifi
    lambda: |-
      if (id(${device_internal_name}_wifi_signal).state > -50 ) {
        return {"Excellent"};
      } else if (id(${device_internal_name}_wifi_signal).state > -60) {
        return {"Good"};
      } else if (id(${device_internal_name}_wifi_signal).state > -70) {
        return {"Fair"};
      } else if (id(${device_internal_name}_wifi_signal).state < -70) {
        return {"Weak"};
      } else {
        return {"None"};
      }
    update_interval: ${device_sampling_time}
    entity_category: diagnostic

################################################################################
# Interval
################################################################################
interval:
  - interval: 10s
    then:
      - if:
          condition:
            wifi.connected:
          then:
            - lambda: |-
                id(${device_internal_name}_wifi_connection) = true;
          else:
            - lambda: |-
                id(${device_internal_name}_wifi_connection) = false;
